<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>servo-influxdb</name>
	<description>A Servo and InfluxDB Integration</description>
	<url>https://github.com/pages/PolymathicCoder/servo-influxdb</url>
	<inceptionYear>2016</inceptionYear>

	<groupId>com.polymathiccoder</groupId>
	<artifactId>servo-influxdb</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<organization>
    <name>PolymathicCoder LLC</name>
    <url>http://www.polymathiccoder.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

	<developers>
		<developer>
			<id>PolymathicCoder</id>
			<name>Abdelmonaim Remani</name>
			<email>PolymathicCoder@gmail.com</email>
			<organization>PolymathicCoder LLC.</organization>
			<organizationUrl>http://www.polymathiccoder.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-8</timezone>
		</developer>
	</developers>

	<mailingLists>
    <mailingList>
      <archive>http://groups.google.com/group/servo-influxdb</archive>
      <name>servo-influxdb</name>
      <post>servo-influxdb@googlegroups.com</post>
      <subscribe>http://groups.google.com/group/servo-influxdb</subscribe>
      <unsubscribe>servo-influxdb+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList>
  </mailingLists>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/PolymathicCoder/servo-influxdb/issues</url>
	</issueManagement>

	<scm>
    <connection>scm:git:https://PolymathicCoder@github.com/PolymathicCoder/servo-influxdb.git</connection>
    <developerConnection>scm:git:https://PolymathicCoder@github.com/PolymathicCoder/servo-influxdb.git</developerConnection>
    <url>https://PolymathicCoder@github.com/PolymathicCoder/servo-influxdb.git</url>
  </scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>

		<dependency>
			<groupId>com.netflix.servo</groupId>
			<artifactId>servo-core</artifactId>
			<version>0.12.9</version>
		</dependency>

		<dependency>
			<groupId>org.influxdb</groupId>
			<artifactId>influxdb-java</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.10</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.21</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.5.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>2.0.2-beta</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>1.13</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-javaagent</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4-rule-agent</artifactId>
			<version>1.6.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-core</artifactId>
			<version>3.4.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.unitils</groupId>
			<artifactId>unitils-inject</artifactId>
			<version>3.4.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<compilerVersion>${java.version}</compilerVersion>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Lombok -->
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.16.10.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- JaCoCo -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<configuration>
					<forkCount>5</forkCount>
          <reuseForks>true</reuseForks>
          <argLine>-Dnet.sf.ehcache.disabled=true -Dfile.encoding=${project.build.sourceEncoding}</argLine>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<skipDeploy>true</skipDeploy>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.7</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Docker -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.11</version>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<!-- Deploy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<!-- Staging -->
			<plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.7</version>
        <extensions>true</extensions>
        <configuration>
          <nexusUrl>file://${project.build.directory}/mvn-repo</nexusUrl>
          <serverId>internal.repo</serverId>
        </configuration>
      </plugin>
			<!-- GitHub Site -->
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.mylyn.github</groupId>
						<artifactId>org.eclipse.egit.github.core</artifactId>
						<version>2.1.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>mvn-site</id>
						<phase>site-deploy</phase>
						<goals>
							<goal>site</goal>
						</goals>
						<configuration>
							<host>api.github.com</host>
							<repositoryOwner>PolymathicCoder</repositoryOwner>
							<repositoryName>servo-influxdb</repositoryName>
							<server>github-com</server>
							<branch>refs/heads/gh-pages</branch>
							<path>${project.version}</path>
							<message>Generated Maven Site for: ${project.version}</message>
							<merge>true</merge>
						</configuration>
					</execution>
					<execution>
						<id>mvn-repo</id>
						<phase>deploy</phase>
						<goals>
							<goal>site</goal>
						</goals>
						<configuration>
							<host>api.github.com</host>
							<repositoryOwner>PolymathicCoder</repositoryOwner>
							<repositoryName>servo-influxdb</repositoryName>
							<server>github-com</server>
							<branch>refs/heads/mvn-repo</branch>
							<path>${project.version}</path>
							<message>Generated Maven artifacts for: ${project.version}</message>
							<merge>true</merge>
							<noJekyll>true</noJekyll>
							<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
							<includes>
								<include>**/*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
        <artifactId>jgitflow-maven-plugin</artifactId>
        <version>1.0-m5.1</version>
				<configuration>
			    <!-- Enable this to push to origin using SSH keys -->
			    <enableSshAgent>true</enableSshAgent>
			    <!-- Keep your maven submodules at the same version as the parent POM -->
			    <autoVersionSubmodules>true</autoVersionSubmodules>
			    <!--
			      Pusing in-development features to origin allows all devs to see what each other
			      are working on
			    -->
			    <pushFeatures>true</pushFeatures>
			    <!--
			      This allows the CI server (e.g. Jenkins) to automatically push new releases to
			      origin; you can then either manually deploy them or, if you are doing Continuous
			      Deployments, auto-deploy them to prod
			    -->
			    <pushReleases>true</pushReleases>
			    <!--
			      Hot Fixes should be pushed to origin as well so that any dev can pick them up
			    -->
			    <pushHotfixes>true</pushHotfixes>
			    <!--
			      Prevents deployments from dev workstations so that they can be done by a CI
			      server
			    -->
			    <noDeploy>true</noDeploy>
			    <flowInitContext>
			      <!--
			        You can customize your development branch name. Why? Because it's faster to type
			        'git push origin dvlp'
			        than
			        'git push origin develop'
			        ;-)
			      -->
			      <developBranchName>dvlp</developBranchName>
			      <!-- You can also customize your tag prefixes -->
			      <versionTagPrefix>rev-</versionTagPrefix>
			    </flowInitContext>
			  </configuration>
      </plugin>

			<!-- I am not a lawyer -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>ianal-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>verify-legal-files</goal>
						</goals>
						<configuration>
							<strict>false</strict>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
		<snapshotRepository>
			<id>internal.snapshot.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</snapshotRepository>
		<!--
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		-->
	</distributionManagement>

	<repositories>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<reporting>
		<plugins>
			<!-- Documentation -->
			<!-- JavaDoc + UML (Requires GraphViz) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<source>${java.version}</source>
					<aggregate>true</aggregate>
					<doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>gr.spinellis</groupId>
						<artifactId>UmlGraph</artifactId>
						<version>4.6</version>
					</docletArtifact>
					<additionalparam>
						-all
						-hide ^((?!com.polymathiccoder).*)$
						-collpackages java.util.*
						-qualify
						-visibility
						-inferrel
						-inferdep
						-inferdepinpackage
						-quiet
						-postfixpackage
						-nodefontsize 9
						-nodefontpackagesize 7
						-linkoffline http://docs.oracle.com/javase/8/docs/api/
          </additionalparam>
				</configuration>
			</plugin>

			<!-- Surefire -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>surefire-report-maven-plugin</artifactId>
				<version>2.0-beta-1</version>
			</plugin>

			<!-- Checkstyle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<configLocation>${basedir}/codequality/checkstyle.xml</configLocation>
				</configuration>

			</plugin>

			<!-- JXR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<!-- PMD -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.6</version>
				<configuration>
					<sourceEncoding>utf-8</sourceEncoding>
					<targetJdk>${java.version}</targetJdk>
					<linkXref>true</linkXref>
					<includeTests>true</includeTests>
					<verbose>true</verbose>
					<minimumTokens>100</minimumTokens>
				</configuration>
			</plugin>
			<!-- Reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
					<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<!-- JaCoCo -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
			</plugin>
			<!-- Cobertura -->
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>html</format>
					</formats>
				</configuration>
			</plugin>
			-->
			<!-- FindBugs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
			</plugin>

			<!-- JavaNCSS -->
			<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javancss-maven-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			-->

			<!-- JDepend -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>

			<!-- Sonar -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>

			<!-- Tag Report -->
      <plugin>
      	<groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <multipleLineComments>true</multipleLineComments>
					<tags>
						<tag>IDEA</tag>
						<tag>idea</tag>
						<tag>MUDO</tag>
          	<tag>mudo</tag>
          </tags>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Todo Work</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
      </plugin>

			<!-- Clirr -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>clirr-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
